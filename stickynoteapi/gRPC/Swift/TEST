#!/bin/sh

echo "1. Initiating tests"

#check if xcpretty is installed.

action="test"; target=""; filename="all"

for last; do true; done
count=${last:-1}

regex='^[0-9]+$' #check if last argument is a number, if not set it to 1.
if ! [[ $count =~ $regex ]] ; then
   count=1
fi

echo "count $count"

while (( "$#" )); do
   case "$1" in
      --rest)  
			target="RESTTests/RESTTests"
			filename="rest"
            ;;
      --grpc)     
			target="gRPCTests/gRPCTests"
			filename="grpc"
            ;;
      --socket) 
			echo "ERROR: Not yet setup"
            ;;
      --without-building) 
            action="test-without-building" 
            ;;               
      *) 
   esac        
   shift
done

echo "Initiating: $action with target $target"

perform_tests() {
	if [ "$target" = "" ]; then
  		xcodebuild "$action" \
  		-scheme stickynotes \
  		-workspace stickynotes.xcworkspace \
  		-destination 'platform=iOS Simulator,name=iPhone 8' | XCPRETTY_JSON_FILE_OUTPUT=build/reports/"${filename}"/"errors_$1.json" xcpretty -r junit --output build/reports/"${filename}"/"${filename}_$1.xml"  -f `xcpretty-json-formatter`  # OS=13.3' TODO: add the device's OS picking logic.
  	else
  		xcodebuild "$action" \
  		-scheme stickynotes \
  		-workspace stickynotes.xcworkspace \
  		-destination 'platform=iOS Simulator,name=iPhone 8' \
  		-only-testing "$target" | XCPRETTY_JSON_FILE_OUTPUT=build/reports/"${filename}"/"errors_$1.json" xcpretty \-r junit --output build/reports/"${filename}"/"${filename}_$1.xml"  -f `xcpretty-json-formatter` #--report html
	fi
}

for ((i=1; i<=count; i++)); do perform_tests $i; done #execute the tests 'count' nuber of times. used C style loop as 'for i in {1..$count}' does not work!
